var M = 'Region,0\n0,1473,1413,1423,1374,1621,1479,1375,1545,1416,1106,1273,1193,1385,1076,1884\n1380,0,703,703,429,449,733,615,389,655,594,694,721,676,554,655\n1370,647,0,240,419,778,304,593,776,916,583,685,524,889,544,872\n1131,408,477,0,360,556,544,399,479,620,344,445,284,593,305,819\n1315,423,381,462,0,503,411,337,521,661,528,535,424,634,489,834\n1574,468,727,808,499,0,758,837,498,764,787,887,834,737,748,970\n1433,725,270,351,411,770,0,705,768,908,647,748,587,881,607,983\n1347,602,593,602,337,750,651,0,674,814,599,470,524,787,532,1013\n1468,405,754,835,527,496,785,703,0,358,747,833,672,331,683,907\n1412,722,886,967,658,775,916,834,369,0,600,759,679,252,536,1145\n1107,653,593,602,553,801,659,620,729,567,0,385,305,595,242,1064\n1254,783,724,733,541,971,790,497,806,714,418,0,292,742,389,1194\n1188,714,558,567,447,805,624,558,640,648,336,309,0,676,323,1121\n1390,681,868,949,641,780,899,817,374,258,649,808,728,0,561,1128\n1046,654,594,604,555,802,660,556,688,526,249,408,328,536,0,1065\n1828,655,828,810,876,956,955,1063,895,1144,1041,1141,1126,1117,1002,0\nRegion,1\n0,1194,1236,1373,1377,1385,1040,1131,1006,1068,1200,1243,989,1081,1016,693\n1246,0,346,482,418,190,298,400,469,488,419,462,575,623,697,968\n1258,316,0,298,554,515,356,405,459,478,518,561,604,681,755,920\n1254,423,282,0,661,622,418,408,566,585,588,557,711,630,705,975\n1344,596,672,808,0,366,395,497,527,546,517,560,672,720,795,1065\n1350,365,503,640,387,0,450,530,552,570,571,614,697,775,850,1013\n1120,154,196,332,416,344,0,239,322,340,351,394,467,543,618,783\n1130,164,206,342,426,354,10,0,332,350,361,404,476,553,628,793\n1098,188,230,366,355,378,34,273,0,318,385,428,445,521,596,761\n1184,411,453,590,578,602,257,329,223,0,219,339,381,571,673,846\n1121,431,504,565,530,622,238,229,312,214,0,206,399,551,573,843\n1154,471,543,577,569,661,278,268,380,282,213,0,467,482,574,844\n1034,517,559,695,684,707,363,519,329,390,409,496,0,248,416,687\n1023,594,636,675,732,783,440,431,548,573,530,446,260,0,168,438\n1007,660,702,741,797,849,506,496,759,739,649,583,471,211,0,423\n584,795,837,973,978,985,641,807,607,668,800,843,589,610,545,0\nRegion,2\n0,1035,877,1623,1855,2020,1875,2151,2107,1994,1832,1608,1635,1557,1247,1202\n1022,0,846,1569,1801,1966,1821,2098,2053,1940,1778,1543,1605,1692,1486,1440\n813,936,0,1171,1398,1562,1417,1694,1649,1536,1374,1210,1194,1280,988,943\n1531,1640,1092,0,785,1061,650,955,1093,1278,1276,1041,1110,1197,1248,1202\n1791,1900,1352,757,0,979,397,654,346,803,904,954,1067,1116,1572,1481\n1477,1586,1038,563,615,0,635,940,867,1051,1163,1057,1117,1204,1254,1209\n1789,1898,1350,607,387,631,0,304,620,1076,1188,1091,1221,1266,1567,1546\n2064,2172,1625,912,642,586,304,0,316,1148,1338,1396,1526,1571,1841,1795\n2027,2136,1588,1063,326,633,612,308,0,833,1022,1189,1303,1352,1807,1716\n1858,1967,1419,1275,801,1476,1077,1152,844,0,620,903,1017,1066,1521,1430\n1753,1862,1314,1212,913,1590,1196,1335,1027,624,0,715,733,782,1423,1332\n1508,1617,1069,966,946,1414,1089,1394,1198,928,715,0,130,175,820,728\n1596,1705,1148,1055,1068,1503,1285,1590,1319,1050,800,196,0,266,783,692\n1586,1807,1271,1156,1065,1605,1279,1584,1317,1048,798,190,216,0,869,690\n1314,1655,987,1184,1467,1632,1487,1764,1719,1536,1374,789,773,859,0,197\n1255,1596,928,1125,1408,1573,1428,1705,1660,1444,1282,717,701,691,182,0\nRegion,3\n0,2213,1825,1524,1725,1747,1874,1956,1529,1404,1061,1244,1187,1081,834,825\n2164,0,455,1004,1206,1255,1441,1523,1504,1114,1415,1487,1608,1543,1681,1672\n1793,470,0,549,751,885,1071,1152,1134,743,1045,1117,1237,1173,1310,1302\n1463,1007,548,0,307,577,762,844,825,413,714,787,907,842,980,971\n1658,1185,743,300,0,772,957,1039,1021,608,910,982,1102,1037,1175,1167\n1570,1140,753,481,682,0,350,432,413,520,821,893,1048,949,1087,1078\n1889,1460,1072,800,1001,519,0,82,406,839,1167,1034,1083,1314,1406,1397\n1971,1541,1154,882,1083,600,82,0,488,921,1248,1116,1165,1396,1488,1479\n1593,1520,1132,860,1061,609,410,491,0,694,822,689,738,969,1110,1102\n1050,1250,862,561,762,843,942,1024,597,0,302,374,494,429,567,558\n1064,1442,1054,753,954,1039,1098,1180,753,587,0,468,508,486,581,572\n1190,1508,1121,819,1021,1084,1044,1126,699,757,441,0,466,569,707,698\n1134,1560,1173,871,1073,1188,1119,1201,774,742,493,468,0,491,652,643\n1099,1564,1176,875,1076,1161,1225,1307,880,755,447,595,513,0,596,587\n815,1716,1328,1027,1228,1313,1377,1458,1032,907,564,746,690,576,0,57\n876,1735,1347,1046,1247,1332,1396,1477,1051,926,582,765,709,610,41,0\nRegion,4\n0,673,728,719,826,610,615,763,945,784,821,986,898,754,539,1108\n665,0,375,327,435,367,188,316,303,288,326,491,403,263,693,619\n681,191,0,131,289,421,250,491,481,401,438,603,515,371,813,725\n794,180,177,0,341,351,284,348,545,456,485,636,548,404,880,758\n769,224,221,352,0,420,338,468,513,489,526,691,603,459,901,813\n611,254,308,299,407,0,189,412,543,451,489,654,566,421,701,775\n613,244,298,318,397,207,0,291,444,282,320,485,397,253,622,607\n782,410,433,405,551,461,309,0,559,310,339,477,389,225,655,599\n901,337,423,564,580,571,423,505,0,353,382,620,607,499,929,640\n786,374,457,448,556,488,309,265,422,0,29,545,465,535,958,597\n767,355,438,489,537,469,290,246,379,112,0,526,446,516,939,554\n948,596,619,610,717,650,470,564,541,445,451,0,368,584,1058,364\n827,415,498,489,596,529,349,367,564,468,474,376,0,329,808,580\n774,362,445,436,544,476,297,329,716,460,489,575,312,0,599,779\n498,705,788,779,887,721,645,672,920,803,832,1086,844,534,0,1251\n1100,669,756,762,913,802,622,640,641,555,561,391,639,800,1232,0\nRegion,5\n0,692,700,677,707,1075,893,694,603,782,673,1059,1164,1088,844,955\n687,0,417,443,474,1266,660,757,370,549,439,780,923,808,318,721\n651,432,0,171,394,1166,641,837,290,469,359,628,760,656,451,641\n655,394,161,0,280,1095,486,826,176,355,278,533,684,562,541,559\n763,502,424,263,0,857,344,610,106,142,285,646,796,674,641,567\n996,1201,1106,1037,813,0,834,872,880,963,823,1377,1306,1447,1340,1097\n888,627,532,458,362,850,0,710,385,350,233,787,716,869,766,507\n646,794,876,859,635,852,668,0,702,738,644,1242,1127,1270,946,918\n657,396,318,157,104,919,384,672,0,179,179,540,690,568,535,461\n838,576,499,338,135,1003,342,730,181,0,360,721,871,749,715,641\n797,536,441,343,462,1012,421,804,353,451,0,562,491,746,675,282\n1037,770,610,511,662,1367,832,1208,558,737,660,0,241,279,532,488\n1098,837,737,652,803,1313,770,1105,699,751,634,232,0,420,673,439\n1038,770,610,512,662,1477,869,1209,558,737,660,291,400,0,533,689\n818,288,456,585,605,1393,791,889,501,680,571,598,741,626,0,851\n1020,759,664,566,685,1235,600,1027,576,673,598,527,453,715,797,0\nRegion,6\n0,1508,1594,1568,1929,1971,1953,1919,1805,1756,1768,2240,1414,1305,1395,1680\n1419,0,414,564,871,913,895,861,975,966,710,1182,960,1047,1155,917\n1523,445,0,374,726,769,751,717,830,822,566,1038,1335,1295,1215,1013\n1613,564,401,0,845,888,870,836,949,941,534,1157,1454,1541,1334,1132\n1909,863,711,870,0,214,243,264,771,765,783,889,1461,1392,1313,1110\n1942,896,744,903,215,0,201,344,742,739,816,809,1494,1425,1346,1144\n1902,856,704,863,175,97,0,304,682,679,776,749,1454,1385,1306,1104\n1871,825,673,832,347,430,402,0,609,672,723,837,1376,1307,1227,1025\n1803,980,828,987,781,759,689,633,0,129,850,773,1211,1142,1063,907\n1731,957,805,964,778,747,650,632,126,0,826,754,1139,1070,991,788\n1691,657,528,514,734,776,768,724,826,817,0,1055,1359,1290,1211,1008\n2176,1130,978,1137,895,818,720,807,740,730,1029,0,1728,1659,1580,1378\n1431,956,1299,1449,1465,1507,1499,1389,1199,1150,1323,1820,0,305,435,525\n1325,1033,1169,1328,1332,1375,1366,1256,1066,1017,1190,1687,272,0,216,597\n1376,1156,1179,1338,1343,1385,1377,1267,1077,1028,1201,1698,439,252,0,571\n1617,1009,886,1045,1049,1092,1083,973,783,734,907,1404,567,670,595,0\nRegion,7\n0,1427,1350,1361,1370,1564,1507,1145,927,1087,1202,1291,1329,1618,1053,955\n1422,0,683,894,957,901,1531,1226,1299,1382,1849,1794,1069,720,1391,1296\n1357,661,0,292,354,493,902,597,833,753,1383,1328,459,408,925,717\n1326,848,297,0,110,482,722,538,738,694,1288,1191,185,405,830,638\n1337,910,360,104,0,461,780,580,850,736,1400,1345,232,378,942,701\n1626,848,512,472,462,0,854,825,932,905,1482,1323,437,205,1024,832\n1466,1462,885,676,739,768,0,725,754,654,902,678,624,877,758,673\n1140,1205,628,507,570,821,708,0,501,156,1005,874,443,732,546,297\n965,1368,917,762,824,933,618,418,0,292,681,582,698,987,276,324\n1065,1362,785,697,760,850,640,156,345,0,849,762,633,922,391,241\n1239,1822,1424,1255,1318,1427,878,979,725,863,0,245,1191,1480,441,817\n1325,1780,1382,1213,1276,1275,659,889,682,764,234,0,1149,1384,399,775\n1334,1021,471,288,231,441,651,443,656,599,1207,1152,0,353,748,557\n1626,668,427,410,386,198,950,736,949,892,1499,1445,349,0,1041,849\n1011,1381,983,814,877,986,764,578,284,422,459,404,750,1039,0,376\n1158,1222,645,438,501,610,552,322,464,444,1015,960,374,663,556,0\n';
var WASTE = [];
WASTE.length = 8;
WASTE[0] = [
  ['00', 39.2431787,-94.7370019,'1'],
  ['01', 39.2898592,-94.6863722,'1'],
  ['02', 39.2710242,-94.6678453,'1'],
  ['03', 39.2606268,-94.6623577,'1'],
  ['04', 39.263029,-94.7242035,'1'],
  ['05', 39.2727505,-94.6988655,'1'],
  ['06', 39.2789957,-94.6276975,'1'],
  ['07', 39.2351913,-94.7037787,'1'],
  ['08', 39.2298856,-94.6880157,'1'],
  ['09', 39.2305248,-94.6433863,'1'],
  ['10', 39.2382414,-94.6403928,'1'],
  ['11', 39.240959,-94.6552524,'1'],
  ['12', 39.2190493,-94.6909831,'1'],
  ['13', 39.2189333,-94.6482306,'1'],
  ['14', 39.2911898,-94.8058151,'1'],
];
WASTE[1] = [
  ['15', 39.2754468,-94.5993321,'2'],
  ['16', 39.2845263,-94.5833559,'2'],
  ['17', 39.2888818,-94.5630145,'2'],
  ['18', 39.2591714,-94.6400579,'2'],
  ['19', 39.2675453,-94.6154872,'2'],
  ['20', 39.265306,-94.5847927,'2'],
  ['21', 39.2632678,-94.5858203,'2'],
  ['22', 39.2574029,-94.5882033,'2'],
  ['23', 39.2518442,-94.586367,'2'],
  ['24', 39.2517741,-94.5729821,'2'],
  ['25', 39.2539061,-94.5667222,'2'],
  ['26', 39.2243489,-94.5813344,'2'],
  ['27', 39.2247728,-94.5554065,'2'],
  ['28', 39.2178903,-94.5419984,'2'],
  ['29', 39.1872093,-94.544712,'2']
];
WASTE[2] = [
  ['30', 39.1657878,-94.5902334,'3'],
  ['31', 39.2359789,-94.4959507,'3'],
  ['32', 39.3543179,-94.4260174,'3'],
  ['33', 39.3885007,-94.3448454,'3'],
  ['34', 39.4083557,-94.352175,'3'],
  ['35', 39.413057,-94.3715472,'3'],
  ['36', 39.4388803,-94.3393725,'3'],
  ['37', 39.4194278,-94.3163336,'3'],
  ['38', 39.3468861,-94.2767125,'3'],
  ['39', 39.3138709,-94.2923066,'3'],
  ['40', 39.2723572,-94.3552201,'3'],
  ['41', 39.265447,-94.3699433,'3'],
  ['42', 39.2541205,-94.3671224,'3'],
  ['43', 39.2228467,-94.4076589,'3'],
  ['44', 39.2149504,-94.3926815,'3'],
];
WASTE[3] = [
  ['45', 39.1990828,-94.8767134,'4'],
  ['46', 39.1491503,-94.8610692,'4'],
  ['47', 39.1006909,-94.8405625,'4'],
  ['48', 39.0785286,-94.8413468,'4'],
  ['49', 39.0358291,-94.7863306,'4'],
  ['50', 39.0411093,-94.7714265,'4'],
  ['51', 39.0377457,-94.762706,'4'],
  ['52', 39.0629461,-94.7348585,'4'],
  ['53', 39.1051807,-94.7177383,'4'],
  ['54', 39.1038394,-94.6711131,'4'],
  ['55', 39.0814747,-94.6713114,'4'],
  ['56', 39.0816183,-94.6528674,'4'],
  ['57', 39.1008603,-94.6423381,'4'],
  ['58', 39.1252578,-94.6217065,'4'],
  ['59', 39.1236686,-94.6212188,'4'],
];
WASTE[4] = [
  ['60', 39.1000706,-94.5940876,'5'],
  ['61', 39.1047656,-94.587772,'5'],
  ['62', 39.1031992,-94.5828907,'5'],
  ['63', 39.1242372,-94.5906439,'5'],
  ['64', 39.1120083,-94.5713383,'5'],
  ['65', 39.1050305,-94.5678021,'5'],
  ['66', 39.0976358,-94.5747986,'5'],
  ['67', 39.0814663,-94.5864272,'5'],
  ['68', 39.0862955,-94.5763322,'5'],
  ['69', 39.0849556,-94.5762812,'5'],
  ['70', 39.0627993,-94.5696039,'5'],
  ['71', 39.0705199,-94.5517173,'5'],
  ['72', 39.0893246,-94.5422069,'5'],
  ['73', 39.1091196,-94.5162243,'5'],
  ['74', 39.0468762,-94.5815972,'5'],
];
WASTE[5] = [
  ['75', 39.1105869,-94.4711014,'6'],
  ['76', 39.0886768,-94.4834321,'6'],
  ['77', 39.0837554,-94.4823369,'6'],
  ['78', 39.0823413,-94.5173375,'6'],
  ['79', 39.0599808,-94.5871244,'6'],
  ['80', 39.0627508,-94.5162774,'6'],
  ['81', 39.111187,-94.5396423,'6'],
  ['82', 39.083904,-94.5000264,'6'],
  ['83', 39.0765059,-94.5137466,'6'],
  ['84', 39.0554949,-94.4835117,'6'],
  ['85', 39.0706166,-94.431093,'6'],
  ['86', 39.0568098,-94.4224853,'6'],
  ['87', 39.0795022,-94.4186981,'6'],
  ['88', 39.1032805,-94.4469273,'6'],
  ['89', 39.0363955,-94.4414704,'6'],
];
WASTE[6] = [
  ['90', 38.9912292,-94.6836133,'7'],
  ['91', 38.9750091,-94.7086072,'7'],
  ['92', 38.977348,-94.7174573,'7'],
  ['93', 38.8931098,-94.7009274,'7'],
  ['94', 38.8873278,-94.7020264,'7'],
  ['95', 38.8846129,-94.700396,'7'],
  ['96', 38.899684,-94.685969,'7'],
  ['97', 38.9088063,-94.6453009,'7'],
  ['98', 38.9062818,-94.6400698,'7'],
  ['99', 38.9404039,-94.7381737,'7'],
  ['100', 38.8491518,-94.6570899,'7'],
  ['101', 39.0015376,-94.5861012,'7'],
  ['102', 38.9928591,-94.5714563,'7'],
  ['103', 38.9818346,-94.5682575,'7'],
  ['104', 38.9656586,-94.6055493,'7'],
];
WASTE[7] = [
  ['105', 39.0188667,-94.6252613,'8'],
  ['106', 39.0010317,-94.5814841,'8'],
  ['107', 38.9866629,-94.5655617,'8'],
  ['108', 38.9827959,-94.5675494,'8'],
  ['109', 38.9610732,-94.5917958,'8'],
  ['110', 38.9431893,-94.4491258,'8'],
  ['111', 38.9844884,-94.5126759,'8'],
  ['112', 38.9980997,-94.4805634,'8'],
  ['113', 38.9836225,-94.492455,'8'],
  ['114', 39.0148518,-94.4254242,'8'],
  ['115', 38.9997563,-94.4216776,'8'],
  ['116', 38.9710594,-94.5574532,'8'],
  ['117', 38.9745248,-94.5987889,'8'],
  ['118', 39.0090782,-94.469559,'8'],
  ['119', 38.981971,-94.5066791,'8'],
];

var UMKC = '39.1366392,-94.5229319';

var D = [];
D.length = 8;
for (var i = 0; i < D.length; i++) {
  D[i] = [];
  D[i].length = 16;
  for (var j = 0; j < D[i].length; j++) {
    D[i][j] = [];
    D[i][j].length = 16;
  }
}

function load_D() {
  var input = M;
  input = input.split('\n');
  for (var i = 0; i < input.length; i++) {
    if (i % 17 === 0) {continue;}
    var line = input[i].split(',');
    for (var j = 0; j < line.length; j++) {
      var k = Math.floor(i / 17);
      D[k][i - k * 17 - 1][j] = line[j];
    }
  }
}

$(document).ready(
  function() {
    load_D();
    if (sessionStorage.getItem('drivers') === null) {
      sessionStorage.setItem('drivers', 'Ting,Chen');
    }
    if (sessionStorage.getItem('id') === null) {
      sessionStorage.setItem('id', 'Dayu');
    }
    sessionStorage.setItem('stop', '1');
    sessionStorage.setItem('assign', '1');
    $('#supervisor').replaceWith('<td id = \'supervisor\' class = \'m_2\'>' + sessionStorage.getItem('id') + '</td>');
    var drivers = sessionStorage.getItem('drivers');
    drivers = drivers.split(',');
    var receivers = '<datalist id = \'job_receiver\'>';
    for (var i = 0; i < drivers.length; i++) {
      receivers += '<option value = "' + drivers[i] + '"></option>';
    }
    receivers += '</datalist>';
    $('#job_receiver').replaceWith(receivers);

    //    for (var q = 0; q < 1; q++) {
    //      (function() {
    //        for (var region = 0; region < 8; region++) {
    //          (function() {
    //            for (var source = 0; source < 16; source++) {
    //              (function() {
    //                routine_path_2(region, source, D[region]);
    //              })(source);
    //            }
    //          })(region)
    //        }
    //      })(q)
    //    }



    console.log(D);


    //    $(document).ajaxStop(
    //      function() {
    //        if (sessionStorage.getItem('stop') === '1') {
    //          sessionStorage.setItem('stop', '0');
    //          
    for (var k = 0; k < 8; k++) {
      var path = routine_path(D[k]);
      //      console.log(path);
      for (var p = 0; p < path.length; p++) {
        if (p === 0) {
          $('#r' + (k + 1).toString()).append('&emsp;');
        }
        $('#r' + (k + 1).toString()).append((path[p] + 15 * k).toString());
        if (p !== path.length - 1) {
          $('#r' + (k + 1).toString()).append('&rarr;');
        }
      }
    }
    //        }
    //      }
    //    );
  }
);

var routine_path = function(region) {
  var result = [];
  var color = [];
  color.length = 16;
  for (var i = 0; i < 16; i++) {
    color[i] = 'white';
  }
  var queue = [];
  queue.push(0);
  color[0] = 'black';
  while (queue.length > 0) {
    var T = queue[0];
    queue.pop();
    var dist = Infinity;
    var ind;
    for (var q = 0; q < 16; q++) {
      if (color[q] === 'white' && region[T][q] < dist) {
        dist = region[T][q];
        ind = q;
      }
    }
    if (isFinite(dist)) {
      result.push(ind - 1);
      queue.push(ind);
      color[ind] = 'black';
    }
  }
  return result;
};

$(
  function() {
    $('#assign_job').click(
      function() {
        var job_type = $('#job_t').val();
        if (job_type === 'Routine Job') {
          var reg = $('#region_num').val();
          var receiver = $('#job_r').val();
          reg = parseInt(reg) - 1;
          var r = routine_path(D[reg]);
          var new_w = [];
          var pri = 1;
          for (var i = 0; i < r.length; i++) {
            new_w.push({
              'waste_id': (r[i] + 15 * reg).toString(),
              'latitude': WASTE[reg][r[i]][1].toString(),
              'longtitude': WASTE[reg][r[i]][2].toString(),
              'zone_id': reg.toString(),
              'priority': pri.toString()
            });
            pri++;
          }
          $.ajax(
            {
              url: "https://api.mlab.com/api/1/databases/skydefender/collections/sky/" + receiver + "?apiKey=L3tVr3ypZdG3UXlyiek9YP3bZqbBQexR",
              data: JSON.stringify(
                {
                  "$set": {
                    "waste_list": new_w
                  }
                }
              ),
              type: "PUT",
              contentType: "application/json",
              success: function(result) {
                alert('Job successfully assigned!');
              },
              error: function(error) {
                alert('Fail');
              }
            }
          );
        }
        else {
          var reg = parseInt($('#region_num').val()) - 1;
          var receiver = $('#job_r').val();
          var waste_number = parseInt($('#waste_id').val());
          var index = waste_number - 15 * reg;
          var limit = $('#deadline').val();
          $.ajax(
            {
              url: "https://api.mlab.com/api/1/databases/skydefender/collections/sky/" + receiver + "?apiKey=L3tVr3ypZdG3UXlyiek9YP3bZqbBQexR",
              method: 'GET',
              success: function(result) {
                var current_waste = result['waste_list'];
                var current_path = [];
                for (var i = 0; i < current_waste.length; i++) {
                  current_path.push(parseInt(current_waste[i]['waste_id']));
                }
                for (var q = 0; q < 1; q++) {
                  (function() {
                    routine_path_3(current_path, waste_number, limit);
                  })(q)
                }
                var timer_2 = setInterval(
                  function() {
                    if (sessionStorage.getItem('newPath') !== null) {
                      clearInterval(timer_2);
                      var text_path = sessionStorage.getItem('newPath');
                      sessionStorage.setItem('newPath', null);
                      var text_path = text_path.split(',');
                      var new_path = [];
                      var pri_2 = 1;
                      for (var j = 0; j < text_path.length; j++) {
                        new_path.push({
                          'waste_id': text_path[j],
                          'latitude': WASTE[Math.floor(parseInt(text_path[j]) / 15)][parseInt(text_path[j]) % 15][1].toString(),
                          'longtitude': WASTE[Math.floor(parseInt(text_path[j]) / 15)][parseInt(text_path[j]) % 15][2].toString(),
                          'zone_id': (Math.floor(parseInt(text_path[j]) / 15)).toString(),
                          'priority': pri_2.toString()
                        });
                        pri_2++;
                      }
                      $.ajax(
                        {
                          url: "https://api.mlab.com/api/1/databases/skydefender/collections/sky/" + receiver + "?apiKey=L3tVr3ypZdG3UXlyiek9YP3bZqbBQexR",
                          data: JSON.stringify(
                            {
                              "$set": {
                                "waste_list": new_path
                              }
                            }
                          ),
                          type: "PUT",
                          contentType: "application/json",
                          success: function(result) {
                            alert('Job successfully assigned!');
                          },
                          error: function(error) {
                            alert('Fail');
                          }
                        }
                      );
                    }
                  },
                  500
                );
              },
              error: function(error) {
                alert('Fail');
              }
            }
          );
        }
      }
    );
  }
);

//function routine_path_2(region_number, source_index, result_matrix) {  // 'region_number' is from 0 to 7.
//  if (source_index === 0) {
//    var source_point = UMKC;
//  }
//  else {
//    var source_point = WASTE[region_number][source_index - 1][1].toString() + ',' + WASTE[region_number][source_index - 1][2].toString();
//  }
//  var query_string = 'https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=' + source_point;
//  query_string += '&destinations=' + UMKC;
//  for (var j = 0; j < WASTE[region_number].length; j++) {
//    query_string += '|' + WASTE[region_number][j][1].toString() + ',' + WASTE[region_number][j][2].toString();
//  }
//  query_string += '&key=AIzaSyBdQx5oWNym1RUqj57OZsD-nDGyYDUpKSk';
//  $.ajax(
//    {
//      url: query_string,
//      method: 'GET',
//      dataType: 'json',
//      success: function(result) {
//        var elements = result['rows'][0]['elements'];
//        for (var j = 0; j < elements.length; j++) {
//          result_matrix[source_index][j] = elements[j]['duration']['value'];
//        }
//      },
//      error: function(error) {
//        alert('fail');
//      }
//    }
//  );
//};

function routine_path_3(path, new_id, deadline) {
  source_point = '';
  for (var i = 0; i < path.length; i++) {
    var row = Math.floor(path[i] / 15);
    source_point += i === 0 ? '' : '|';
    source_point += WASTE[row][path[i] % 15][1].toString() + ',' + WASTE[row][path[i] % 15][2].toString();
  }
  query_string = 'https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=' + source_point;
  query_string += '&destinations=';
  query_string += WASTE[Math.floor(new_id / 15)][new_id % 15][1].toString() + ',' + WASTE[Math.floor(new_id / 15)][new_id % 15][2].toString();
  query_string += '&key=AIzaSyBdQx5oWNym1RUqj57OZsD-nDGyYDUpKSk';
  $.ajax(
    {
      url: query_string,
      method: 'GET',
      dataType: 'json',
      success: function(result) {
        var elements = result['rows'];
        var dist_2 = [];
        for (var j = 0; j < elements.length; j++) {
          dist_2.push(parseFloat(elements[j]['elements'][0]['duration']['value']));
          console.log('dist_2 = ' + dist_2);
        }

        // 'Sky Defender' Algorithm
        var pos = 0;
        var limit = deadline === '' ? Infinity : deadline * 60;
        for (var k = 1; k < path.length; k++) {
          if (Math.floor(path[k - 1] / 15) !== Math.floor(path[k] / 15)) {
            continue;
          }
          var theReg = Math.floor(path[k] / 15);
          var index_1 = path[k - 1] % 15, index_2 = path[k] % 15;
          var dist1 = D[theReg][index_1][index_2];
          var dist2 = dist_2[k - 1];
          if (dist2 <= dist1) {
            pos = k - 1;
            break;
          }
          if ((limit -= dist2) < 0) {
            if (k - 2 < 0) {
              alert('The job cannot be assigned to this driver!');
              return;
            }
            pos = k - 2;
            break;
          }
        }
        var new_path = '';
        for (var i = 0; i < path.length; i++) {
          new_path += path[i].toString();
          if (i === pos) {
            new_path += ',' + new_id.toString();
          }
          new_path += i === path.length - 1 ? '' : ',';
        }
        sessionStorage.setItem('newPath', new_path);
      },
      error: function(error) {
        alert('fail');
      }
    }
  );
};